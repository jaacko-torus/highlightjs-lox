{"version":3,"sources":["lox.ts","lox.js"],"names":["regex","hljs","IDENT_RE","LANGUAGE_KEYWORDS","LITERALS","BUILT_IN_VARIABLES","KEYWORDS","$pattern","keyword","literal","NUMBER","scope","variants","begin","relevance","PARAMS_CONTAINS","C_LINE_COMMENT_MODE","end","keywords","contains","PARAMS","excludeBegin","excludeEnd","CLASS_OR_EXTENDS","match","FUNCTION_DEFINITION","label","illegal","UPPER_CASE_CONSTANT","noneOf","list","concat","join","FUNCTION_CALL","lookahead","PROPERTY_ACCESS","lox","name","aliases","QUOTE_STRING_MODE","RE_STARTERS_RE","REGEXP_MODE","beginKeywords","UNDERSCORE_IDENT_RE","returnBegin","inherit","TITLE_MODE"],"mappings":"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","file":"lox.js","sourcesContent":["/**\r\n * @name Lox\r\n * @param {LanguageFn} hljs\r\n * @website http://craftinginterpreters.com/\r\n * @license MIT\r\n */\r\n\r\nimport type { HLJSApi, Language, LanguageFn, Mode } from \"highlight.js\";\r\nimport hljs from \"highlight.js\";\r\nconst regex = (hljs as HLJSApi & HLJSRegex).regex\r\n\r\nconst IDENT_RE = \"[A-Za-z][0-9A-Za-z]*\"\r\n\r\nconst LANGUAGE_KEYWORDS = [\r\n\t\"class\",\r\n\t\"else\",\r\n\t\"for\",\r\n\t\"function\",\r\n\t\"if\",\r\n\t\"print\",\r\n\t\"return\",\r\n\t\"var\",\r\n\t\"while\",\r\n]\r\n\r\nconst LITERALS = [\r\n\t\"false\",\r\n\t\"nil\",\r\n\t\"true\",\r\n]\r\n\r\nconst BUILT_IN_VARIABLES = [\r\n\t\"super\",\r\n\t\"this\",\r\n]\r\n\r\nconst KEYWORDS = {\r\n\t$pattern: IDENT_RE,\r\n\tkeyword: LANGUAGE_KEYWORDS,\r\n\tliteral: LITERALS,\r\n\t\"variable.language\": BUILT_IN_VARIABLES\r\n};\r\n\r\nconst NUMBER: Mode = {\r\n\tscope: \"number\",\r\n\tvariants: [\r\n\t\t{ begin: \"[\\\\d]+\" },\r\n\t\t{ begin: \"\\\\d+(\\.\\\\d+)?\" },\r\n\t],\r\n\trelevance: 0\r\n};\r\n\r\nconst PARAMS_CONTAINS = [\r\n\thljs.C_LINE_COMMENT_MODE,\r\n\t// eat recursive parens in sub expressions\r\n\t{\r\n\t\tbegin: /\\(/,\r\n\t\tend: /\\)/,\r\n\t\tkeywords: KEYWORDS,\r\n\t\tcontains: [\"self\", hljs.C_LINE_COMMENT_MODE]\r\n\t} as Mode\r\n];\r\n\r\nconst PARAMS: Mode = {\r\n\tscope: \"params\",\r\n\tbegin: /\\(/,\r\n\tend: /\\)/,\r\n\texcludeBegin: true,\r\n\texcludeEnd: true,\r\n\tkeywords: KEYWORDS,\r\n\tcontains: PARAMS_CONTAINS\r\n};\r\n\r\nconst CLASS_OR_EXTENDS: Mode = {\r\n\tvariants: [\r\n\t\t// class Car < Vehicle\r\n\t\t{\r\n\t\t\tmatch: [\r\n\t\t\t\t/class/,\r\n\t\t\t\t/\\s+/,\r\n\t\t\t\tIDENT_RE,\r\n\t\t\t\t/\\s+/,\r\n\t\t\t\t/</,\r\n\t\t\t\t/\\s+/,\r\n\t\t\t],\r\n\t\t\tscope: {\r\n\t\t\t\t1: \"keyword\",\r\n\t\t\t\t3: \"title.class\",\r\n\t\t\t\t5: \"keyword\",\r\n\t\t\t\t7: \"title.class.inherited\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t// class Car\r\n\t\t{\r\n\t\t\tmatch: [\r\n\t\t\t\t/class/,\r\n\t\t\t\t/\\s+/,\r\n\t\t\t\tIDENT_RE\r\n\t\t\t],\r\n\t\t\tscope: {\r\n\t\t\t\t1: \"keyword\",\r\n\t\t\t\t3: \"title.class\"\r\n\t\t\t}\r\n\t\t},\r\n\t]\r\n};\r\n\r\nconst FUNCTION_DEFINITION: Mode = {\r\n\tvariants: [\r\n\t\t{\r\n\t\t\tmatch: [\r\n\t\t\t\t/function/,\r\n\t\t\t\t/\\s+/,\r\n\t\t\t\tIDENT_RE,\r\n\t\t\t\t/(?=\\s*\\()/\r\n\t\t\t]\r\n\t\t},\r\n\t],\r\n\tscope: {\r\n\t\t1: \"keyword\",\r\n\t\t3: \"title.function\"\r\n\t},\r\n\tlabel: \"func.def\",\r\n\tcontains: [PARAMS],\r\n\tillegal: /%/\r\n};\r\n\r\nconst UPPER_CASE_CONSTANT: Mode = {\r\n\trelevance: 0,\r\n\tmatch: /\\b[A-Z][A-Z0-9]+\\b/,\r\n\tscope: \"variable.constant\"\r\n};\r\n\r\nfunction noneOf(list: string[]) {\r\n\treturn regex.concat(\"(?!\", list.join(\"|\"), \")\");\r\n}\r\n\r\nconst FUNCTION_CALL: Mode = {\r\n\tmatch: regex.concat(\r\n\t\t/\\b/,\r\n\t\tnoneOf([\"super\"]),\r\n\t\tIDENT_RE, regex.lookahead(/\\(/)),\r\n\tscope: \"title.function\",\r\n\trelevance: 0\r\n};\r\n\r\nconst PROPERTY_ACCESS: Mode = {\r\n\tbegin: regex.concat(/\\./, regex.lookahead(\r\n\t\tregex.concat(IDENT_RE, /(?![0-9A-Za-z(])/)\r\n\t)),\r\n\tend: IDENT_RE,\r\n\texcludeBegin: true,\r\n\tscope: \"property\",\r\n\trelevance: 0\r\n};\r\n\r\n// HLJSApi\r\n\r\n/**\r\n * @name Lox\r\n * @param {HLJSApi} hljs\r\n * @website http://craftinginterpreters.com/\r\n */\r\nconst lox: LanguageFn = (hljs: HLJSApi) => {\r\n\treturn {\r\n\t\tname: \"Lox\",\r\n\t\taliases: [\"lox\"],\r\n\t\tkeywords: KEYWORDS,\r\n\t\tillegal: /#(?![$_A-z])/,\r\n\t\tcontains: [\r\n\t\t\thljs.QUOTE_STRING_MODE,\r\n\t\t\thljs.C_LINE_COMMENT_MODE,\r\n\t\t\tNUMBER,\r\n\t\t\t{ // \"value\" container\r\n\t\t\t\tbegin: \"(\" + hljs.RE_STARTERS_RE + \"|\\\\b(return)\\\\b)\\\\s*\",\r\n\t\t\t\tkeywords: \"return\",\r\n\t\t\t\trelevance: 0,\r\n\t\t\t\tcontains: [\r\n\t\t\t\t\thljs.C_LINE_COMMENT_MODE,\r\n\t\t\t\t\thljs.REGEXP_MODE,\r\n\t\t\t\t\t{ // could be a comma delimited list of params to a function call\r\n\t\t\t\t\t\tbegin: /,/,\r\n\t\t\t\t\t\trelevance: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmatch: /\\s+/,\r\n\t\t\t\t\t\trelevance: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tFUNCTION_DEFINITION,\r\n\t\t\t{\r\n\t\t\t\t// prevent this from getting swallowed up by function since they appear \"function like\"\r\n\t\t\t\tbeginKeywords: \"while if for\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// we have to count the parens to make sure we actually have the correct\r\n\t\t\t\t// bounding ( ).  There could be any number of sub-expressions inside\r\n\t\t\t\t// also surrounded by parens.\r\n\t\t\t\tbegin: \"\\\\b(?!function)\" + hljs.UNDERSCORE_IDENT_RE +\r\n\t\t\t\t\t\"\\\\(\" + // first parens\r\n\t\t\t\t\t\"[^()]*(\\\\(\" +\r\n\t\t\t\t\t\"[^()]*(\\\\(\" +\r\n\t\t\t\t\t\"[^()]*\" +\r\n\t\t\t\t\t\"\\\\)[^()]*)*\" +\r\n\t\t\t\t\t\"\\\\)[^()]*)*\" +\r\n\t\t\t\t\t\"\\\\)\\\\s*\\\\{\", // end parens\r\n\t\t\t\treturnBegin: true,\r\n\t\t\t\tlabel: \"func.def\",\r\n\t\t\t\tcontains: [\r\n\t\t\t\t\tPARAMS,\r\n\t\t\t\t\thljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE, scope: \"title.function\" })\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tPROPERTY_ACCESS,\r\n\t\t\t{\r\n\t\t\t\tmatch: [/\\binit(?=\\s*\\()/],\r\n\t\t\t\tscope: { 1: \"title.function\" },\r\n\t\t\t\tcontains: [PARAMS]\r\n\t\t\t},\r\n\t\t\tFUNCTION_CALL,\r\n\t\t\tUPPER_CASE_CONSTANT,\r\n\t\t\tCLASS_OR_EXTENDS,\r\n\t\t\t{\r\n\t\t\t\tmatch: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\r\n\t\t\t}\r\n\t\t]\r\n\t} as Language;\r\n}\r\n\r\nexport default lox;","/**\n * @name Lox\n * @param {LanguageFn} hljs\n * @website http://craftinginterpreters.com/\n * @license MIT\n */\nimport hljs from \"highlight.js\";\nconst regex = hljs.regex;\nconst IDENT_RE = \"[A-Za-z][0-9A-Za-z]*\";\nconst LANGUAGE_KEYWORDS = [\n    \"class\",\n    \"else\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"print\",\n    \"return\",\n    \"var\",\n    \"while\",\n];\nconst LITERALS = [\n    \"false\",\n    \"nil\",\n    \"true\",\n];\nconst BUILT_IN_VARIABLES = [\n    \"super\",\n    \"this\",\n];\nconst KEYWORDS = {\n    $pattern: IDENT_RE,\n    keyword: LANGUAGE_KEYWORDS,\n    literal: LITERALS,\n    \"variable.language\": BUILT_IN_VARIABLES\n};\nconst NUMBER = {\n    scope: \"number\",\n    variants: [\n        { begin: \"[\\\\d]+\" },\n        { begin: \"\\\\d+(\\.\\\\d+)?\" },\n    ],\n    relevance: 0\n};\nconst PARAMS_CONTAINS = [\n    hljs.C_LINE_COMMENT_MODE,\n    // eat recursive parens in sub expressions\n    {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [\"self\", hljs.C_LINE_COMMENT_MODE]\n    }\n];\nconst PARAMS = {\n    scope: \"params\",\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS,\n    contains: PARAMS_CONTAINS\n};\nconst CLASS_OR_EXTENDS = {\n    variants: [\n        // class Car < Vehicle\n        {\n            match: [\n                /class/,\n                /\\s+/,\n                IDENT_RE,\n                /\\s+/,\n                /</,\n                /\\s+/,\n            ],\n            scope: {\n                1: \"keyword\",\n                3: \"title.class\",\n                5: \"keyword\",\n                7: \"title.class.inherited\"\n            }\n        },\n        // class Car\n        {\n            match: [\n                /class/,\n                /\\s+/,\n                IDENT_RE\n            ],\n            scope: {\n                1: \"keyword\",\n                3: \"title.class\"\n            }\n        },\n    ]\n};\nconst FUNCTION_DEFINITION = {\n    variants: [\n        {\n            match: [\n                /function/,\n                /\\s+/,\n                IDENT_RE,\n                /(?=\\s*\\()/\n            ]\n        },\n    ],\n    scope: {\n        1: \"keyword\",\n        3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [PARAMS],\n    illegal: /%/\n};\nconst UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z0-9]+\\b/,\n    scope: \"variable.constant\"\n};\nfunction noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n}\nconst FUNCTION_CALL = {\n    match: regex.concat(/\\b/, noneOf([\"super\"]), IDENT_RE, regex.lookahead(/\\(/)),\n    scope: \"title.function\",\n    relevance: 0\n};\nconst PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(regex.concat(IDENT_RE, /(?![0-9A-Za-z(])/))),\n    end: IDENT_RE,\n    excludeBegin: true,\n    scope: \"property\",\n    relevance: 0\n};\n// HLJSApi\n/**\n * @name Lox\n * @param {HLJSApi} hljs\n * @website http://craftinginterpreters.com/\n */\nconst lox = (hljs) => {\n    return {\n        name: \"Lox\",\n        aliases: [\"lox\"],\n        keywords: KEYWORDS,\n        illegal: /#(?![$_A-z])/,\n        contains: [\n            hljs.QUOTE_STRING_MODE,\n            hljs.C_LINE_COMMENT_MODE,\n            NUMBER,\n            {\n                begin: \"(\" + hljs.RE_STARTERS_RE + \"|\\\\b(return)\\\\b)\\\\s*\",\n                keywords: \"return\",\n                relevance: 0,\n                contains: [\n                    hljs.C_LINE_COMMENT_MODE,\n                    hljs.REGEXP_MODE,\n                    {\n                        begin: /,/,\n                        relevance: 0\n                    },\n                    {\n                        match: /\\s+/,\n                        relevance: 0\n                    },\n                ],\n            },\n            FUNCTION_DEFINITION,\n            {\n                // prevent this from getting swallowed up by function since they appear \"function like\"\n                beginKeywords: \"while if for\"\n            },\n            {\n                // we have to count the parens to make sure we actually have the correct\n                // bounding ( ).  There could be any number of sub-expressions inside\n                // also surrounded by parens.\n                begin: \"\\\\b(?!function)\" + hljs.UNDERSCORE_IDENT_RE +\n                    \"\\\\(\" + // first parens\n                    \"[^()]*(\\\\(\" +\n                    \"[^()]*(\\\\(\" +\n                    \"[^()]*\" +\n                    \"\\\\)[^()]*)*\" +\n                    \"\\\\)[^()]*)*\" +\n                    \"\\\\)\\\\s*\\\\{\",\n                returnBegin: true,\n                label: \"func.def\",\n                contains: [\n                    PARAMS,\n                    hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE, scope: \"title.function\" })\n                ]\n            },\n            PROPERTY_ACCESS,\n            {\n                match: [/\\binit(?=\\s*\\()/],\n                scope: { 1: \"title.function\" },\n                contains: [PARAMS]\n            },\n            FUNCTION_CALL,\n            UPPER_CASE_CONSTANT,\n            CLASS_OR_EXTENDS,\n            {\n                match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n            }\n        ]\n    };\n};\nexport default lox;"]}